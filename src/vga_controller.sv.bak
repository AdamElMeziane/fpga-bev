module vga_controller (
    input  logic clk,         // 25 MHz pixel clock
    input  logic rst,
    output logic hsync,
    output logic vsync,
    output logic [9:0] x,     // 0–639
    output logic [9:0] y,     // 0–479
    output logic video_on     // High when in visible area
);

    // VGA 640x480 @ 60Hz timing constants
    localparam H_VISIBLE   = 640;
    localparam H_FRONT     = 16;
    localparam H_SYNC      = 96;
    localparam H_BACK      = 48;
    localparam H_TOTAL     = H_VISIBLE + H_FRONT + H_SYNC + H_BACK;

    localparam V_VISIBLE   = 480;
    localparam V_FRONT     = 10;
    localparam V_SYNC      = 2;
    localparam V_BACK      = 33;
    localparam V_TOTAL     = V_VISIBLE + V_FRONT + V_SYNC + V_BACK;

    logic [9:0] h_count = 0;
    logic [9:0] v_count = 0;

    // Horizontal counter
    always_ff @(posedge clk or posedge rst) begin
        if (rst)
            h_count <= 0;
        else if (h_count == H_TOTAL - 1)
            h_count <= 0;
        else
            h_count <= h_count + 1;
    end

    // Vertical counter
    always_ff @(posedge clk or posedge rst) begin
        if (rst)
            v_count <= 0;
        else if (h_count == H_TOTAL - 1) begin
            if (v_count == V_TOTAL - 1)
                v_count <= 0;
            else
                v_count <= v_count + 1;
        end
    end

    // Sync signals (active low)
    assign hsync = ~(h_count >= H_VISIBLE + H_FRONT &&
                     h_count <  H_VISIBLE + H_FRONT + H_SYNC);

    assign vsync = ~(v_count >= V_VISIBLE + V_FRONT &&
                     v_count <  V_VISIBLE + V_FRONT + V_SYNC);

    // Current pixel coordinates
    assign x = h_count;
    assign y = v_count;

    // Video on signal
    assign video_on = (h_count < H_VISIBLE) && (v_count < V_VISIBLE);

endmodule
